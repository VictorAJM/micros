
Practica 4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000522  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  00000522  000005b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800070  00800070  000005c6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005c6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000005f8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b8  00000000  00000000  00000634  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000dd7  00000000  00000000  000006ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000821  00000000  00000000  000014c3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000733  00000000  00000000  00001ce4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000020c  00000000  00000000  00002418  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000494  00000000  00000000  00002624  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000095b  00000000  00000000  00002ab8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  00003413  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 56 01 	jmp	0x2ac	; 0x2ac <__vector_18>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 e2       	ldi	r30, 0x22	; 34
  68:	f5 e0       	ldi	r31, 0x05	; 5
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 37       	cpi	r26, 0x70	; 112
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e7       	ldi	r26, 0x70	; 112
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a4 37       	cpi	r26, 0x74	; 116
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 17 01 	call	0x22e	; 0x22e <main>
  8a:	0c 94 8f 02 	jmp	0x51e	; 0x51e <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <time>:
  92:	fc 01       	movw	r30, r24
  94:	0f b6       	in	r0, 0x3f	; 63
  96:	f8 94       	cli
  98:	60 91 70 00 	lds	r22, 0x0070	; 0x800070 <__data_end>
  9c:	70 91 71 00 	lds	r23, 0x0071	; 0x800071 <__data_end+0x1>
  a0:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <__data_end+0x2>
  a4:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <__data_end+0x3>
  a8:	0f be       	out	0x3f, r0	; 63
  aa:	30 97       	sbiw	r30, 0x00	; 0
  ac:	21 f0       	breq	.+8      	; 0xb6 <time+0x24>
  ae:	60 83       	st	Z, r22
  b0:	71 83       	std	Z+1, r23	; 0x01
  b2:	82 83       	std	Z+2, r24	; 0x02
  b4:	93 83       	std	Z+3, r25	; 0x03
  b6:	08 95       	ret

000000b8 <toggle_e>:
}

uint8_t uno_en_bit(volatile uint8_t *LUGAR, uint8_t BIT)
{
	return (*LUGAR&(1<<BIT));
}
  b8:	82 b3       	in	r24, 0x12	; 18
  ba:	80 64       	ori	r24, 0x40	; 64
  bc:	82 bb       	out	0x12, r24	; 18
  be:	00 c0       	rjmp	.+0      	; 0xc0 <toggle_e+0x8>
  c0:	82 b3       	in	r24, 0x12	; 18
  c2:	8f 7b       	andi	r24, 0xBF	; 191
  c4:	82 bb       	out	0x12, r24	; 18
  c6:	08 95       	ret

000000c8 <lcd_write>:
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
  cc:	d8 2f       	mov	r29, r24
  ce:	66 23       	and	r22, r22
  d0:	21 f0       	breq	.+8      	; 0xda <lcd_write+0x12>
  d2:	82 b3       	in	r24, 0x12	; 18
  d4:	80 61       	ori	r24, 0x10	; 16
  d6:	82 bb       	out	0x12, r24	; 18
  d8:	03 c0       	rjmp	.+6      	; 0xe0 <lcd_write+0x18>
  da:	82 b3       	in	r24, 0x12	; 18
  dc:	8f 7e       	andi	r24, 0xEF	; 239
  de:	82 bb       	out	0x12, r24	; 18
  e0:	82 b3       	in	r24, 0x12	; 18
  e2:	8f 7d       	andi	r24, 0xDF	; 223
  e4:	82 bb       	out	0x12, r24	; 18
  e6:	81 b3       	in	r24, 0x11	; 17
  e8:	8f 60       	ori	r24, 0x0F	; 15
  ea:	81 bb       	out	0x11, r24	; 17
  ec:	c2 b3       	in	r28, 0x12	; 18
  ee:	c0 7f       	andi	r28, 0xF0	; 240
  f0:	8d 2f       	mov	r24, r29
  f2:	82 95       	swap	r24
  f4:	8f 70       	andi	r24, 0x0F	; 15
  f6:	8c 2b       	or	r24, r28
  f8:	82 bb       	out	0x12, r24	; 18
  fa:	0e 94 5c 00 	call	0xb8	; 0xb8 <toggle_e>
  fe:	df 70       	andi	r29, 0x0F	; 15
 100:	dc 2b       	or	r29, r28
 102:	d2 bb       	out	0x12, r29	; 18
 104:	0e 94 5c 00 	call	0xb8	; 0xb8 <toggle_e>
 108:	cf 60       	ori	r28, 0x0F	; 15
 10a:	c2 bb       	out	0x12, r28	; 18
 10c:	df 91       	pop	r29
 10e:	cf 91       	pop	r28
 110:	08 95       	ret

00000112 <lcd_read>:
 112:	88 23       	and	r24, r24
 114:	21 f0       	breq	.+8      	; 0x11e <lcd_read+0xc>
 116:	82 b3       	in	r24, 0x12	; 18
 118:	80 61       	ori	r24, 0x10	; 16
 11a:	82 bb       	out	0x12, r24	; 18
 11c:	03 c0       	rjmp	.+6      	; 0x124 <lcd_read+0x12>
 11e:	82 b3       	in	r24, 0x12	; 18
 120:	8f 7e       	andi	r24, 0xEF	; 239
 122:	82 bb       	out	0x12, r24	; 18
 124:	82 b3       	in	r24, 0x12	; 18
 126:	80 62       	ori	r24, 0x20	; 32
 128:	82 bb       	out	0x12, r24	; 18
 12a:	81 b3       	in	r24, 0x11	; 17
 12c:	80 7f       	andi	r24, 0xF0	; 240
 12e:	81 bb       	out	0x11, r24	; 17
 130:	82 b3       	in	r24, 0x12	; 18
 132:	80 64       	ori	r24, 0x40	; 64
 134:	82 bb       	out	0x12, r24	; 18
 136:	00 c0       	rjmp	.+0      	; 0x138 <lcd_read+0x26>
 138:	90 b3       	in	r25, 0x10	; 16
 13a:	92 95       	swap	r25
 13c:	90 7f       	andi	r25, 0xF0	; 240
 13e:	82 b3       	in	r24, 0x12	; 18
 140:	8f 7b       	andi	r24, 0xBF	; 191
 142:	82 bb       	out	0x12, r24	; 18
 144:	00 c0       	rjmp	.+0      	; 0x146 <lcd_read+0x34>
 146:	82 b3       	in	r24, 0x12	; 18
 148:	80 64       	ori	r24, 0x40	; 64
 14a:	82 bb       	out	0x12, r24	; 18
 14c:	00 c0       	rjmp	.+0      	; 0x14e <lcd_read+0x3c>
 14e:	80 b3       	in	r24, 0x10	; 16
 150:	8f 70       	andi	r24, 0x0F	; 15
 152:	22 b3       	in	r18, 0x12	; 18
 154:	2f 7b       	andi	r18, 0xBF	; 191
 156:	22 bb       	out	0x12, r18	; 18
 158:	89 2b       	or	r24, r25
 15a:	08 95       	ret

0000015c <lcd_waitbusy>:
 15c:	80 e0       	ldi	r24, 0x00	; 0
 15e:	0e 94 89 00 	call	0x112	; 0x112 <lcd_read>
 162:	88 23       	and	r24, r24
 164:	dc f3       	brlt	.-10     	; 0x15c <lcd_waitbusy>
 166:	00 c0       	rjmp	.+0      	; 0x168 <lcd_waitbusy+0xc>
 168:	80 e0       	ldi	r24, 0x00	; 0
 16a:	0e 94 89 00 	call	0x112	; 0x112 <lcd_read>
 16e:	08 95       	ret

00000170 <lcd_command>:
 170:	cf 93       	push	r28
 172:	c8 2f       	mov	r28, r24
 174:	0e 94 ae 00 	call	0x15c	; 0x15c <lcd_waitbusy>
 178:	60 e0       	ldi	r22, 0x00	; 0
 17a:	8c 2f       	mov	r24, r28
 17c:	0e 94 64 00 	call	0xc8	; 0xc8 <lcd_write>
 180:	cf 91       	pop	r28
 182:	08 95       	ret

00000184 <lcd_clrscr>:
 184:	81 e0       	ldi	r24, 0x01	; 1
 186:	0e 94 b8 00 	call	0x170	; 0x170 <lcd_command>
 18a:	08 95       	ret

0000018c <lcd_putc>:
 18c:	cf 93       	push	r28
 18e:	c8 2f       	mov	r28, r24
 190:	0e 94 ae 00 	call	0x15c	; 0x15c <lcd_waitbusy>
 194:	ca 30       	cpi	r28, 0x0A	; 10
 196:	49 f4       	brne	.+18     	; 0x1aa <lcd_putc+0x1e>
 198:	80 34       	cpi	r24, 0x40	; 64
 19a:	10 f4       	brcc	.+4      	; 0x1a0 <lcd_putc+0x14>
 19c:	80 e4       	ldi	r24, 0x40	; 64
 19e:	01 c0       	rjmp	.+2      	; 0x1a2 <lcd_putc+0x16>
 1a0:	80 e0       	ldi	r24, 0x00	; 0
 1a2:	80 58       	subi	r24, 0x80	; 128
 1a4:	0e 94 b8 00 	call	0x170	; 0x170 <lcd_command>
 1a8:	04 c0       	rjmp	.+8      	; 0x1b2 <lcd_putc+0x26>
 1aa:	61 e0       	ldi	r22, 0x01	; 1
 1ac:	8c 2f       	mov	r24, r28
 1ae:	0e 94 64 00 	call	0xc8	; 0xc8 <lcd_write>
 1b2:	cf 91       	pop	r28
 1b4:	08 95       	ret

000001b6 <lcd_init>:
 1b6:	1f 93       	push	r17
 1b8:	cf 93       	push	r28
 1ba:	df 93       	push	r29
 1bc:	18 2f       	mov	r17, r24
 1be:	81 b3       	in	r24, 0x11	; 17
 1c0:	8f 67       	ori	r24, 0x7F	; 127
 1c2:	81 bb       	out	0x11, r24	; 17
 1c4:	80 ea       	ldi	r24, 0xA0	; 160
 1c6:	9f e0       	ldi	r25, 0x0F	; 15
 1c8:	01 97       	sbiw	r24, 0x01	; 1
 1ca:	f1 f7       	brne	.-4      	; 0x1c8 <lcd_init+0x12>
 1cc:	82 b3       	in	r24, 0x12	; 18
 1ce:	82 60       	ori	r24, 0x02	; 2
 1d0:	82 bb       	out	0x12, r24	; 18
 1d2:	82 b3       	in	r24, 0x12	; 18
 1d4:	81 60       	ori	r24, 0x01	; 1
 1d6:	82 bb       	out	0x12, r24	; 18
 1d8:	0e 94 5c 00 	call	0xb8	; 0xb8 <toggle_e>
 1dc:	80 ee       	ldi	r24, 0xE0	; 224
 1de:	94 e0       	ldi	r25, 0x04	; 4
 1e0:	01 97       	sbiw	r24, 0x01	; 1
 1e2:	f1 f7       	brne	.-4      	; 0x1e0 <lcd_init+0x2a>
 1e4:	0e 94 5c 00 	call	0xb8	; 0xb8 <toggle_e>
 1e8:	c0 e1       	ldi	r28, 0x10	; 16
 1ea:	d0 e0       	ldi	r29, 0x00	; 0
 1ec:	ce 01       	movw	r24, r28
 1ee:	01 97       	sbiw	r24, 0x01	; 1
 1f0:	f1 f7       	brne	.-4      	; 0x1ee <lcd_init+0x38>
 1f2:	0e 94 5c 00 	call	0xb8	; 0xb8 <toggle_e>
 1f6:	ce 01       	movw	r24, r28
 1f8:	01 97       	sbiw	r24, 0x01	; 1
 1fa:	f1 f7       	brne	.-4      	; 0x1f8 <lcd_init+0x42>
 1fc:	82 b3       	in	r24, 0x12	; 18
 1fe:	8e 7f       	andi	r24, 0xFE	; 254
 200:	82 bb       	out	0x12, r24	; 18
 202:	0e 94 5c 00 	call	0xb8	; 0xb8 <toggle_e>
 206:	21 97       	sbiw	r28, 0x01	; 1
 208:	f1 f7       	brne	.-4      	; 0x206 <__EEPROM_REGION_LENGTH__+0x6>
 20a:	88 e2       	ldi	r24, 0x28	; 40
 20c:	0e 94 b8 00 	call	0x170	; 0x170 <lcd_command>
 210:	88 e0       	ldi	r24, 0x08	; 8
 212:	0e 94 b8 00 	call	0x170	; 0x170 <lcd_command>
 216:	0e 94 c2 00 	call	0x184	; 0x184 <lcd_clrscr>
 21a:	86 e0       	ldi	r24, 0x06	; 6
 21c:	0e 94 b8 00 	call	0x170	; 0x170 <lcd_command>
 220:	81 2f       	mov	r24, r17
 222:	0e 94 b8 00 	call	0x170	; 0x170 <lcd_command>
 226:	df 91       	pop	r29
 228:	cf 91       	pop	r28
 22a:	1f 91       	pop	r17
 22c:	08 95       	ret

0000022e <main>:
 22e:	78 94       	sei
 230:	80 e0       	ldi	r24, 0x00	; 0
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	0e 94 49 00 	call	0x92	; 0x92 <time>
 238:	cb 01       	movw	r24, r22
 23a:	0e 94 21 02 	call	0x442	; 0x442 <srand>
 23e:	14 be       	out	0x34, r1	; 52
 240:	80 e2       	ldi	r24, 0x20	; 32
 242:	8a bf       	out	0x3a, r24	; 58
 244:	8b bf       	out	0x3b, r24	; 59
 246:	81 e0       	ldi	r24, 0x01	; 1
 248:	87 bb       	out	0x17, r24	; 23
 24a:	8f ef       	ldi	r24, 0xFF	; 255
 24c:	8a bb       	out	0x1a, r24	; 26
 24e:	8e ef       	ldi	r24, 0xFE	; 254
 250:	88 bb       	out	0x18, r24	; 24
 252:	8c e0       	ldi	r24, 0x0C	; 12
 254:	0e 94 db 00 	call	0x1b6	; 0x1b6 <lcd_init>
 258:	0e 94 c2 00 	call	0x184	; 0x184 <lcd_clrscr>
 25c:	ff cf       	rjmp	.-2      	; 0x25c <main+0x2e>

0000025e <cero_en_bit>:
 25e:	fc 01       	movw	r30, r24
 260:	80 81       	ld	r24, Z
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	02 c0       	rjmp	.+4      	; 0x26a <cero_en_bit+0xc>
 266:	95 95       	asr	r25
 268:	87 95       	ror	r24
 26a:	6a 95       	dec	r22
 26c:	e2 f7       	brpl	.-8      	; 0x266 <cero_en_bit+0x8>
 26e:	f1 e0       	ldi	r31, 0x01	; 1
 270:	8f 27       	eor	r24, r31
 272:	81 70       	andi	r24, 0x01	; 1
 274:	08 95       	ret

00000276 <boton>:
 276:	0f 93       	push	r16
 278:	1f 93       	push	r17
 27a:	cf 93       	push	r28
 27c:	8c 01       	movw	r16, r24
 27e:	c6 2f       	mov	r28, r22
 280:	83 ed       	ldi	r24, 0xD3	; 211
 282:	90 e3       	ldi	r25, 0x30	; 48
 284:	01 97       	sbiw	r24, 0x01	; 1
 286:	f1 f7       	brne	.-4      	; 0x284 <boton+0xe>
 288:	00 c0       	rjmp	.+0      	; 0x28a <boton+0x14>
 28a:	00 00       	nop
 28c:	6c 2f       	mov	r22, r28
 28e:	c8 01       	movw	r24, r16
 290:	0e 94 2f 01 	call	0x25e	; 0x25e <cero_en_bit>
 294:	81 11       	cpse	r24, r1
 296:	fa cf       	rjmp	.-12     	; 0x28c <boton+0x16>
 298:	83 ed       	ldi	r24, 0xD3	; 211
 29a:	90 e3       	ldi	r25, 0x30	; 48
 29c:	01 97       	sbiw	r24, 0x01	; 1
 29e:	f1 f7       	brne	.-4      	; 0x29c <boton+0x26>
 2a0:	00 c0       	rjmp	.+0      	; 0x2a2 <boton+0x2c>
 2a2:	00 00       	nop
 2a4:	cf 91       	pop	r28
 2a6:	1f 91       	pop	r17
 2a8:	0f 91       	pop	r16
 2aa:	08 95       	ret

000002ac <__vector_18>:

ISR(INT2_vect){
 2ac:	1f 92       	push	r1
 2ae:	0f 92       	push	r0
 2b0:	0f b6       	in	r0, 0x3f	; 63
 2b2:	0f 92       	push	r0
 2b4:	11 24       	eor	r1, r1
 2b6:	0f 93       	push	r16
 2b8:	1f 93       	push	r17
 2ba:	2f 93       	push	r18
 2bc:	3f 93       	push	r19
 2be:	4f 93       	push	r20
 2c0:	5f 93       	push	r21
 2c2:	6f 93       	push	r22
 2c4:	7f 93       	push	r23
 2c6:	8f 93       	push	r24
 2c8:	9f 93       	push	r25
 2ca:	af 93       	push	r26
 2cc:	bf 93       	push	r27
 2ce:	cf 93       	push	r28
 2d0:	df 93       	push	r29
 2d2:	ef 93       	push	r30
 2d4:	ff 93       	push	r31
	boton(&PINB,2);
 2d6:	62 e0       	ldi	r22, 0x02	; 2
 2d8:	86 e3       	ldi	r24, 0x36	; 54
 2da:	90 e0       	ldi	r25, 0x00	; 0
 2dc:	0e 94 3b 01 	call	0x276	; 0x276 <boton>
	lcd_clrscr();
 2e0:	0e 94 c2 00 	call	0x184	; 0x184 <lcd_clrscr>
	int r=rand()%6+1;
 2e4:	0e 94 1c 02 	call	0x438	; 0x438 <rand>
 2e8:	66 e0       	ldi	r22, 0x06	; 6
 2ea:	70 e0       	ldi	r23, 0x00	; 0
 2ec:	0e 94 a8 01 	call	0x350	; 0x350 <__divmodhi4>
 2f0:	ec 01       	movw	r28, r24
 2f2:	8c 01       	movw	r16, r24
 2f4:	0f 5f       	subi	r16, 0xFF	; 255
 2f6:	1f 4f       	sbci	r17, 0xFF	; 255
	lcd_putc(r-'0');
 2f8:	80 ed       	ldi	r24, 0xD0	; 208
 2fa:	80 0f       	add	r24, r16
 2fc:	0e 94 c6 00 	call	0x18c	; 0x18c <lcd_putc>
	if(r==1 || r==3 || r==5)PORTB=1;
 300:	01 30       	cpi	r16, 0x01	; 1
 302:	11 05       	cpc	r17, r1
 304:	31 f0       	breq	.+12     	; 0x312 <__vector_18+0x66>
 306:	03 30       	cpi	r16, 0x03	; 3
 308:	11 05       	cpc	r17, r1
 30a:	19 f0       	breq	.+6      	; 0x312 <__vector_18+0x66>
 30c:	05 30       	cpi	r16, 0x05	; 5
 30e:	11 05       	cpc	r17, r1
 310:	19 f4       	brne	.+6      	; 0x318 <__vector_18+0x6c>
 312:	81 e0       	ldi	r24, 0x01	; 1
 314:	88 bb       	out	0x18, r24	; 24
 316:	01 c0       	rjmp	.+2      	; 0x31a <__vector_18+0x6e>
	else PORTB=0;
 318:	18 ba       	out	0x18, r1	; 24
	PORTA=pos[r-1];
 31a:	cc 0f       	add	r28, r28
 31c:	dd 1f       	adc	r29, r29
 31e:	cc 59       	subi	r28, 0x9C	; 156
 320:	df 4f       	sbci	r29, 0xFF	; 255
 322:	88 81       	ld	r24, Y
 324:	8b bb       	out	0x1b, r24	; 27
	
 326:	ff 91       	pop	r31
 328:	ef 91       	pop	r30
 32a:	df 91       	pop	r29
 32c:	cf 91       	pop	r28
 32e:	bf 91       	pop	r27
 330:	af 91       	pop	r26
 332:	9f 91       	pop	r25
 334:	8f 91       	pop	r24
 336:	7f 91       	pop	r23
 338:	6f 91       	pop	r22
 33a:	5f 91       	pop	r21
 33c:	4f 91       	pop	r20
 33e:	3f 91       	pop	r19
 340:	2f 91       	pop	r18
 342:	1f 91       	pop	r17
 344:	0f 91       	pop	r16
 346:	0f 90       	pop	r0
 348:	0f be       	out	0x3f, r0	; 63
 34a:	0f 90       	pop	r0
 34c:	1f 90       	pop	r1
 34e:	18 95       	reti

00000350 <__divmodhi4>:
 350:	97 fb       	bst	r25, 7
 352:	07 2e       	mov	r0, r23
 354:	16 f4       	brtc	.+4      	; 0x35a <__divmodhi4+0xa>
 356:	00 94       	com	r0
 358:	07 d0       	rcall	.+14     	; 0x368 <__divmodhi4_neg1>
 35a:	77 fd       	sbrc	r23, 7
 35c:	09 d0       	rcall	.+18     	; 0x370 <__divmodhi4_neg2>
 35e:	0e 94 bc 01 	call	0x378	; 0x378 <__udivmodhi4>
 362:	07 fc       	sbrc	r0, 7
 364:	05 d0       	rcall	.+10     	; 0x370 <__divmodhi4_neg2>
 366:	3e f4       	brtc	.+14     	; 0x376 <__divmodhi4_exit>

00000368 <__divmodhi4_neg1>:
 368:	90 95       	com	r25
 36a:	81 95       	neg	r24
 36c:	9f 4f       	sbci	r25, 0xFF	; 255
 36e:	08 95       	ret

00000370 <__divmodhi4_neg2>:
 370:	70 95       	com	r23
 372:	61 95       	neg	r22
 374:	7f 4f       	sbci	r23, 0xFF	; 255

00000376 <__divmodhi4_exit>:
 376:	08 95       	ret

00000378 <__udivmodhi4>:
 378:	aa 1b       	sub	r26, r26
 37a:	bb 1b       	sub	r27, r27
 37c:	51 e1       	ldi	r21, 0x11	; 17
 37e:	07 c0       	rjmp	.+14     	; 0x38e <__udivmodhi4_ep>

00000380 <__udivmodhi4_loop>:
 380:	aa 1f       	adc	r26, r26
 382:	bb 1f       	adc	r27, r27
 384:	a6 17       	cp	r26, r22
 386:	b7 07       	cpc	r27, r23
 388:	10 f0       	brcs	.+4      	; 0x38e <__udivmodhi4_ep>
 38a:	a6 1b       	sub	r26, r22
 38c:	b7 0b       	sbc	r27, r23

0000038e <__udivmodhi4_ep>:
 38e:	88 1f       	adc	r24, r24
 390:	99 1f       	adc	r25, r25
 392:	5a 95       	dec	r21
 394:	a9 f7       	brne	.-22     	; 0x380 <__udivmodhi4_loop>
 396:	80 95       	com	r24
 398:	90 95       	com	r25
 39a:	bc 01       	movw	r22, r24
 39c:	cd 01       	movw	r24, r26
 39e:	08 95       	ret

000003a0 <do_rand>:
 3a0:	8f 92       	push	r8
 3a2:	9f 92       	push	r9
 3a4:	af 92       	push	r10
 3a6:	bf 92       	push	r11
 3a8:	cf 92       	push	r12
 3aa:	df 92       	push	r13
 3ac:	ef 92       	push	r14
 3ae:	ff 92       	push	r15
 3b0:	cf 93       	push	r28
 3b2:	df 93       	push	r29
 3b4:	ec 01       	movw	r28, r24
 3b6:	68 81       	ld	r22, Y
 3b8:	79 81       	ldd	r23, Y+1	; 0x01
 3ba:	8a 81       	ldd	r24, Y+2	; 0x02
 3bc:	9b 81       	ldd	r25, Y+3	; 0x03
 3be:	61 15       	cp	r22, r1
 3c0:	71 05       	cpc	r23, r1
 3c2:	81 05       	cpc	r24, r1
 3c4:	91 05       	cpc	r25, r1
 3c6:	21 f4       	brne	.+8      	; 0x3d0 <do_rand+0x30>
 3c8:	64 e2       	ldi	r22, 0x24	; 36
 3ca:	79 ed       	ldi	r23, 0xD9	; 217
 3cc:	8b e5       	ldi	r24, 0x5B	; 91
 3ce:	97 e0       	ldi	r25, 0x07	; 7
 3d0:	2d e1       	ldi	r18, 0x1D	; 29
 3d2:	33 ef       	ldi	r19, 0xF3	; 243
 3d4:	41 e0       	ldi	r20, 0x01	; 1
 3d6:	50 e0       	ldi	r21, 0x00	; 0
 3d8:	0e 94 2c 02 	call	0x458	; 0x458 <__divmodsi4>
 3dc:	49 01       	movw	r8, r18
 3de:	5a 01       	movw	r10, r20
 3e0:	9b 01       	movw	r18, r22
 3e2:	ac 01       	movw	r20, r24
 3e4:	a7 ea       	ldi	r26, 0xA7	; 167
 3e6:	b1 e4       	ldi	r27, 0x41	; 65
 3e8:	0e 94 4b 02 	call	0x496	; 0x496 <__muluhisi3>
 3ec:	6b 01       	movw	r12, r22
 3ee:	7c 01       	movw	r14, r24
 3f0:	ac ee       	ldi	r26, 0xEC	; 236
 3f2:	b4 ef       	ldi	r27, 0xF4	; 244
 3f4:	a5 01       	movw	r20, r10
 3f6:	94 01       	movw	r18, r8
 3f8:	0e 94 59 02 	call	0x4b2	; 0x4b2 <__mulohisi3>
 3fc:	dc 01       	movw	r26, r24
 3fe:	cb 01       	movw	r24, r22
 400:	8c 0d       	add	r24, r12
 402:	9d 1d       	adc	r25, r13
 404:	ae 1d       	adc	r26, r14
 406:	bf 1d       	adc	r27, r15
 408:	b7 ff       	sbrs	r27, 7
 40a:	03 c0       	rjmp	.+6      	; 0x412 <__DATA_REGION_LENGTH__+0x12>
 40c:	01 97       	sbiw	r24, 0x01	; 1
 40e:	a1 09       	sbc	r26, r1
 410:	b0 48       	sbci	r27, 0x80	; 128
 412:	88 83       	st	Y, r24
 414:	99 83       	std	Y+1, r25	; 0x01
 416:	aa 83       	std	Y+2, r26	; 0x02
 418:	bb 83       	std	Y+3, r27	; 0x03
 41a:	9f 77       	andi	r25, 0x7F	; 127
 41c:	df 91       	pop	r29
 41e:	cf 91       	pop	r28
 420:	ff 90       	pop	r15
 422:	ef 90       	pop	r14
 424:	df 90       	pop	r13
 426:	cf 90       	pop	r12
 428:	bf 90       	pop	r11
 42a:	af 90       	pop	r10
 42c:	9f 90       	pop	r9
 42e:	8f 90       	pop	r8
 430:	08 95       	ret

00000432 <rand_r>:
 432:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <do_rand>
 436:	08 95       	ret

00000438 <rand>:
 438:	80 e6       	ldi	r24, 0x60	; 96
 43a:	90 e0       	ldi	r25, 0x00	; 0
 43c:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <do_rand>
 440:	08 95       	ret

00000442 <srand>:
 442:	a0 e0       	ldi	r26, 0x00	; 0
 444:	b0 e0       	ldi	r27, 0x00	; 0
 446:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__data_start>
 44a:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__data_start+0x1>
 44e:	a0 93 62 00 	sts	0x0062, r26	; 0x800062 <__data_start+0x2>
 452:	b0 93 63 00 	sts	0x0063, r27	; 0x800063 <__data_start+0x3>
 456:	08 95       	ret

00000458 <__divmodsi4>:
 458:	05 2e       	mov	r0, r21
 45a:	97 fb       	bst	r25, 7
 45c:	1e f4       	brtc	.+6      	; 0x464 <__stack+0x5>
 45e:	00 94       	com	r0
 460:	0e 94 43 02 	call	0x486	; 0x486 <__negsi2>
 464:	57 fd       	sbrc	r21, 7
 466:	07 d0       	rcall	.+14     	; 0x476 <__divmodsi4_neg2>
 468:	0e 94 5e 02 	call	0x4bc	; 0x4bc <__udivmodsi4>
 46c:	07 fc       	sbrc	r0, 7
 46e:	03 d0       	rcall	.+6      	; 0x476 <__divmodsi4_neg2>
 470:	4e f4       	brtc	.+18     	; 0x484 <__divmodsi4_exit>
 472:	0c 94 43 02 	jmp	0x486	; 0x486 <__negsi2>

00000476 <__divmodsi4_neg2>:
 476:	50 95       	com	r21
 478:	40 95       	com	r20
 47a:	30 95       	com	r19
 47c:	21 95       	neg	r18
 47e:	3f 4f       	sbci	r19, 0xFF	; 255
 480:	4f 4f       	sbci	r20, 0xFF	; 255
 482:	5f 4f       	sbci	r21, 0xFF	; 255

00000484 <__divmodsi4_exit>:
 484:	08 95       	ret

00000486 <__negsi2>:
 486:	90 95       	com	r25
 488:	80 95       	com	r24
 48a:	70 95       	com	r23
 48c:	61 95       	neg	r22
 48e:	7f 4f       	sbci	r23, 0xFF	; 255
 490:	8f 4f       	sbci	r24, 0xFF	; 255
 492:	9f 4f       	sbci	r25, 0xFF	; 255
 494:	08 95       	ret

00000496 <__muluhisi3>:
 496:	0e 94 80 02 	call	0x500	; 0x500 <__umulhisi3>
 49a:	a5 9f       	mul	r26, r21
 49c:	90 0d       	add	r25, r0
 49e:	b4 9f       	mul	r27, r20
 4a0:	90 0d       	add	r25, r0
 4a2:	a4 9f       	mul	r26, r20
 4a4:	80 0d       	add	r24, r0
 4a6:	91 1d       	adc	r25, r1
 4a8:	11 24       	eor	r1, r1
 4aa:	08 95       	ret

000004ac <__mulshisi3>:
 4ac:	b7 ff       	sbrs	r27, 7
 4ae:	0c 94 4b 02 	jmp	0x496	; 0x496 <__muluhisi3>

000004b2 <__mulohisi3>:
 4b2:	0e 94 4b 02 	call	0x496	; 0x496 <__muluhisi3>
 4b6:	82 1b       	sub	r24, r18
 4b8:	93 0b       	sbc	r25, r19
 4ba:	08 95       	ret

000004bc <__udivmodsi4>:
 4bc:	a1 e2       	ldi	r26, 0x21	; 33
 4be:	1a 2e       	mov	r1, r26
 4c0:	aa 1b       	sub	r26, r26
 4c2:	bb 1b       	sub	r27, r27
 4c4:	fd 01       	movw	r30, r26
 4c6:	0d c0       	rjmp	.+26     	; 0x4e2 <__udivmodsi4_ep>

000004c8 <__udivmodsi4_loop>:
 4c8:	aa 1f       	adc	r26, r26
 4ca:	bb 1f       	adc	r27, r27
 4cc:	ee 1f       	adc	r30, r30
 4ce:	ff 1f       	adc	r31, r31
 4d0:	a2 17       	cp	r26, r18
 4d2:	b3 07       	cpc	r27, r19
 4d4:	e4 07       	cpc	r30, r20
 4d6:	f5 07       	cpc	r31, r21
 4d8:	20 f0       	brcs	.+8      	; 0x4e2 <__udivmodsi4_ep>
 4da:	a2 1b       	sub	r26, r18
 4dc:	b3 0b       	sbc	r27, r19
 4de:	e4 0b       	sbc	r30, r20
 4e0:	f5 0b       	sbc	r31, r21

000004e2 <__udivmodsi4_ep>:
 4e2:	66 1f       	adc	r22, r22
 4e4:	77 1f       	adc	r23, r23
 4e6:	88 1f       	adc	r24, r24
 4e8:	99 1f       	adc	r25, r25
 4ea:	1a 94       	dec	r1
 4ec:	69 f7       	brne	.-38     	; 0x4c8 <__udivmodsi4_loop>
 4ee:	60 95       	com	r22
 4f0:	70 95       	com	r23
 4f2:	80 95       	com	r24
 4f4:	90 95       	com	r25
 4f6:	9b 01       	movw	r18, r22
 4f8:	ac 01       	movw	r20, r24
 4fa:	bd 01       	movw	r22, r26
 4fc:	cf 01       	movw	r24, r30
 4fe:	08 95       	ret

00000500 <__umulhisi3>:
 500:	a2 9f       	mul	r26, r18
 502:	b0 01       	movw	r22, r0
 504:	b3 9f       	mul	r27, r19
 506:	c0 01       	movw	r24, r0
 508:	a3 9f       	mul	r26, r19
 50a:	70 0d       	add	r23, r0
 50c:	81 1d       	adc	r24, r1
 50e:	11 24       	eor	r1, r1
 510:	91 1d       	adc	r25, r1
 512:	b2 9f       	mul	r27, r18
 514:	70 0d       	add	r23, r0
 516:	81 1d       	adc	r24, r1
 518:	11 24       	eor	r1, r1
 51a:	91 1d       	adc	r25, r1
 51c:	08 95       	ret

0000051e <_exit>:
 51e:	f8 94       	cli

00000520 <__stop_program>:
 520:	ff cf       	rjmp	.-2      	; 0x520 <__stop_program>
