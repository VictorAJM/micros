
Practica 6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000008d6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000092a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000092a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000095c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000c0  00000000  00000000  00000998  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000117e  00000000  00000000  00000a58  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000853  00000000  00000000  00001bd6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000008c1  00000000  00000000  00002429  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001c8  00000000  00000000  00002cec  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000049b  00000000  00000000  00002eb4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b58  00000000  00000000  0000334f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000b0  00000000  00000000  00003ea7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <main>
  64:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <toggle_e>:
		case 13:return 0b01011110;break;
		case 14:return 0b01111001;break;
		case 15:return 0b01110001;break;
	}
	return 0;
}
  6c:	85 b3       	in	r24, 0x15	; 21
  6e:	80 64       	ori	r24, 0x40	; 64
  70:	85 bb       	out	0x15, r24	; 21
  72:	00 c0       	rjmp	.+0      	; 0x74 <toggle_e+0x8>
  74:	85 b3       	in	r24, 0x15	; 21
  76:	8f 7b       	andi	r24, 0xBF	; 191
  78:	85 bb       	out	0x15, r24	; 21
  7a:	08 95       	ret

0000007c <lcd_write>:
  7c:	cf 93       	push	r28
  7e:	df 93       	push	r29
  80:	d8 2f       	mov	r29, r24
  82:	66 23       	and	r22, r22
  84:	21 f0       	breq	.+8      	; 0x8e <lcd_write+0x12>
  86:	85 b3       	in	r24, 0x15	; 21
  88:	80 61       	ori	r24, 0x10	; 16
  8a:	85 bb       	out	0x15, r24	; 21
  8c:	03 c0       	rjmp	.+6      	; 0x94 <lcd_write+0x18>
  8e:	85 b3       	in	r24, 0x15	; 21
  90:	8f 7e       	andi	r24, 0xEF	; 239
  92:	85 bb       	out	0x15, r24	; 21
  94:	85 b3       	in	r24, 0x15	; 21
  96:	8f 7d       	andi	r24, 0xDF	; 223
  98:	85 bb       	out	0x15, r24	; 21
  9a:	84 b3       	in	r24, 0x14	; 20
  9c:	8f 60       	ori	r24, 0x0F	; 15
  9e:	84 bb       	out	0x14, r24	; 20
  a0:	c5 b3       	in	r28, 0x15	; 21
  a2:	c0 7f       	andi	r28, 0xF0	; 240
  a4:	8d 2f       	mov	r24, r29
  a6:	82 95       	swap	r24
  a8:	8f 70       	andi	r24, 0x0F	; 15
  aa:	8c 2b       	or	r24, r28
  ac:	85 bb       	out	0x15, r24	; 21
  ae:	0e 94 36 00 	call	0x6c	; 0x6c <toggle_e>
  b2:	df 70       	andi	r29, 0x0F	; 15
  b4:	dc 2b       	or	r29, r28
  b6:	d5 bb       	out	0x15, r29	; 21
  b8:	0e 94 36 00 	call	0x6c	; 0x6c <toggle_e>
  bc:	cf 60       	ori	r28, 0x0F	; 15
  be:	c5 bb       	out	0x15, r28	; 21
  c0:	df 91       	pop	r29
  c2:	cf 91       	pop	r28
  c4:	08 95       	ret

000000c6 <lcd_read>:
  c6:	88 23       	and	r24, r24
  c8:	21 f0       	breq	.+8      	; 0xd2 <lcd_read+0xc>
  ca:	85 b3       	in	r24, 0x15	; 21
  cc:	80 61       	ori	r24, 0x10	; 16
  ce:	85 bb       	out	0x15, r24	; 21
  d0:	03 c0       	rjmp	.+6      	; 0xd8 <lcd_read+0x12>
  d2:	85 b3       	in	r24, 0x15	; 21
  d4:	8f 7e       	andi	r24, 0xEF	; 239
  d6:	85 bb       	out	0x15, r24	; 21
  d8:	85 b3       	in	r24, 0x15	; 21
  da:	80 62       	ori	r24, 0x20	; 32
  dc:	85 bb       	out	0x15, r24	; 21
  de:	84 b3       	in	r24, 0x14	; 20
  e0:	80 7f       	andi	r24, 0xF0	; 240
  e2:	84 bb       	out	0x14, r24	; 20
  e4:	85 b3       	in	r24, 0x15	; 21
  e6:	80 64       	ori	r24, 0x40	; 64
  e8:	85 bb       	out	0x15, r24	; 21
  ea:	00 c0       	rjmp	.+0      	; 0xec <lcd_read+0x26>
  ec:	93 b3       	in	r25, 0x13	; 19
  ee:	92 95       	swap	r25
  f0:	90 7f       	andi	r25, 0xF0	; 240
  f2:	85 b3       	in	r24, 0x15	; 21
  f4:	8f 7b       	andi	r24, 0xBF	; 191
  f6:	85 bb       	out	0x15, r24	; 21
  f8:	00 c0       	rjmp	.+0      	; 0xfa <lcd_read+0x34>
  fa:	85 b3       	in	r24, 0x15	; 21
  fc:	80 64       	ori	r24, 0x40	; 64
  fe:	85 bb       	out	0x15, r24	; 21
 100:	00 c0       	rjmp	.+0      	; 0x102 <lcd_read+0x3c>
 102:	83 b3       	in	r24, 0x13	; 19
 104:	8f 70       	andi	r24, 0x0F	; 15
 106:	25 b3       	in	r18, 0x15	; 21
 108:	2f 7b       	andi	r18, 0xBF	; 191
 10a:	25 bb       	out	0x15, r18	; 21
 10c:	89 2b       	or	r24, r25
 10e:	08 95       	ret

00000110 <lcd_waitbusy>:
 110:	80 e0       	ldi	r24, 0x00	; 0
 112:	0e 94 63 00 	call	0xc6	; 0xc6 <lcd_read>
 116:	88 23       	and	r24, r24
 118:	dc f3       	brlt	.-10     	; 0x110 <lcd_waitbusy>
 11a:	82 e0       	ldi	r24, 0x02	; 2
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	01 97       	sbiw	r24, 0x01	; 1
 120:	f1 f7       	brne	.-4      	; 0x11e <lcd_waitbusy+0xe>
 122:	80 e0       	ldi	r24, 0x00	; 0
 124:	0e 94 63 00 	call	0xc6	; 0xc6 <lcd_read>
 128:	08 95       	ret

0000012a <lcd_command>:
 12a:	cf 93       	push	r28
 12c:	c8 2f       	mov	r28, r24
 12e:	0e 94 88 00 	call	0x110	; 0x110 <lcd_waitbusy>
 132:	60 e0       	ldi	r22, 0x00	; 0
 134:	8c 2f       	mov	r24, r28
 136:	0e 94 3e 00 	call	0x7c	; 0x7c <lcd_write>
 13a:	cf 91       	pop	r28
 13c:	08 95       	ret

0000013e <lcd_gotoxy>:
 13e:	61 11       	cpse	r22, r1
 140:	04 c0       	rjmp	.+8      	; 0x14a <lcd_gotoxy+0xc>
 142:	80 58       	subi	r24, 0x80	; 128
 144:	0e 94 95 00 	call	0x12a	; 0x12a <lcd_command>
 148:	08 95       	ret
 14a:	80 54       	subi	r24, 0x40	; 64
 14c:	0e 94 95 00 	call	0x12a	; 0x12a <lcd_command>
 150:	08 95       	ret

00000152 <lcd_clrscr>:
 152:	81 e0       	ldi	r24, 0x01	; 1
 154:	0e 94 95 00 	call	0x12a	; 0x12a <lcd_command>
 158:	08 95       	ret

0000015a <lcd_putc>:
 15a:	cf 93       	push	r28
 15c:	c8 2f       	mov	r28, r24
 15e:	0e 94 88 00 	call	0x110	; 0x110 <lcd_waitbusy>
 162:	ca 30       	cpi	r28, 0x0A	; 10
 164:	49 f4       	brne	.+18     	; 0x178 <lcd_putc+0x1e>
 166:	80 34       	cpi	r24, 0x40	; 64
 168:	10 f4       	brcc	.+4      	; 0x16e <lcd_putc+0x14>
 16a:	80 e4       	ldi	r24, 0x40	; 64
 16c:	01 c0       	rjmp	.+2      	; 0x170 <lcd_putc+0x16>
 16e:	80 e0       	ldi	r24, 0x00	; 0
 170:	80 58       	subi	r24, 0x80	; 128
 172:	0e 94 95 00 	call	0x12a	; 0x12a <lcd_command>
 176:	04 c0       	rjmp	.+8      	; 0x180 <lcd_putc+0x26>
 178:	61 e0       	ldi	r22, 0x01	; 1
 17a:	8c 2f       	mov	r24, r28
 17c:	0e 94 3e 00 	call	0x7c	; 0x7c <lcd_write>
 180:	cf 91       	pop	r28
 182:	08 95       	ret

00000184 <lcd_init>:
 184:	1f 93       	push	r17
 186:	cf 93       	push	r28
 188:	df 93       	push	r29
 18a:	18 2f       	mov	r17, r24
 18c:	84 b3       	in	r24, 0x14	; 20
 18e:	8f 67       	ori	r24, 0x7F	; 127
 190:	84 bb       	out	0x14, r24	; 20
 192:	80 e8       	ldi	r24, 0x80	; 128
 194:	9e e3       	ldi	r25, 0x3E	; 62
 196:	01 97       	sbiw	r24, 0x01	; 1
 198:	f1 f7       	brne	.-4      	; 0x196 <lcd_init+0x12>
 19a:	85 b3       	in	r24, 0x15	; 21
 19c:	82 60       	ori	r24, 0x02	; 2
 19e:	85 bb       	out	0x15, r24	; 21
 1a0:	85 b3       	in	r24, 0x15	; 21
 1a2:	81 60       	ori	r24, 0x01	; 1
 1a4:	85 bb       	out	0x15, r24	; 21
 1a6:	0e 94 36 00 	call	0x6c	; 0x6c <toggle_e>
 1aa:	80 e8       	ldi	r24, 0x80	; 128
 1ac:	93 e1       	ldi	r25, 0x13	; 19
 1ae:	01 97       	sbiw	r24, 0x01	; 1
 1b0:	f1 f7       	brne	.-4      	; 0x1ae <lcd_init+0x2a>
 1b2:	0e 94 36 00 	call	0x6c	; 0x6c <toggle_e>
 1b6:	c0 e4       	ldi	r28, 0x40	; 64
 1b8:	d0 e0       	ldi	r29, 0x00	; 0
 1ba:	ce 01       	movw	r24, r28
 1bc:	01 97       	sbiw	r24, 0x01	; 1
 1be:	f1 f7       	brne	.-4      	; 0x1bc <lcd_init+0x38>
 1c0:	0e 94 36 00 	call	0x6c	; 0x6c <toggle_e>
 1c4:	ce 01       	movw	r24, r28
 1c6:	01 97       	sbiw	r24, 0x01	; 1
 1c8:	f1 f7       	brne	.-4      	; 0x1c6 <lcd_init+0x42>
 1ca:	85 b3       	in	r24, 0x15	; 21
 1cc:	8e 7f       	andi	r24, 0xFE	; 254
 1ce:	85 bb       	out	0x15, r24	; 21
 1d0:	0e 94 36 00 	call	0x6c	; 0x6c <toggle_e>
 1d4:	21 97       	sbiw	r28, 0x01	; 1
 1d6:	f1 f7       	brne	.-4      	; 0x1d4 <lcd_init+0x50>
 1d8:	88 e2       	ldi	r24, 0x28	; 40
 1da:	0e 94 95 00 	call	0x12a	; 0x12a <lcd_command>
 1de:	88 e0       	ldi	r24, 0x08	; 8
 1e0:	0e 94 95 00 	call	0x12a	; 0x12a <lcd_command>
 1e4:	0e 94 a9 00 	call	0x152	; 0x152 <lcd_clrscr>
 1e8:	86 e0       	ldi	r24, 0x06	; 6
 1ea:	0e 94 95 00 	call	0x12a	; 0x12a <lcd_command>
 1ee:	81 2f       	mov	r24, r17
 1f0:	0e 94 95 00 	call	0x12a	; 0x12a <lcd_command>
 1f4:	df 91       	pop	r29
 1f6:	cf 91       	pop	r28
 1f8:	1f 91       	pop	r17
 1fa:	08 95       	ret

000001fc <delay_variable_ms>:
 1fc:	20 e0       	ldi	r18, 0x00	; 0
 1fe:	30 e0       	ldi	r19, 0x00	; 0
 200:	08 c0       	rjmp	.+16     	; 0x212 <__EEPROM_REGION_LENGTH__+0x12>
 202:	e7 ee       	ldi	r30, 0xE7	; 231
 204:	f3 e0       	ldi	r31, 0x03	; 3
 206:	31 97       	sbiw	r30, 0x01	; 1
 208:	f1 f7       	brne	.-4      	; 0x206 <__EEPROM_REGION_LENGTH__+0x6>
 20a:	00 c0       	rjmp	.+0      	; 0x20c <__EEPROM_REGION_LENGTH__+0xc>
 20c:	00 00       	nop
 20e:	2f 5f       	subi	r18, 0xFF	; 255
 210:	3f 4f       	sbci	r19, 0xFF	; 255
 212:	28 17       	cp	r18, r24
 214:	39 07       	cpc	r19, r25
 216:	a8 f3       	brcs	.-22     	; 0x202 <__EEPROM_REGION_LENGTH__+0x2>
 218:	08 95       	ret

0000021a <cero_en_bit>:


uint8_t cero_en_bit(volatile uint8_t *LUGAR, uint8_t BIT)
{
	return (!(*LUGAR&(1<<BIT)));
 21a:	fc 01       	movw	r30, r24
 21c:	80 81       	ld	r24, Z
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	02 c0       	rjmp	.+4      	; 0x226 <cero_en_bit+0xc>
 222:	95 95       	asr	r25
 224:	87 95       	ror	r24
 226:	6a 95       	dec	r22
 228:	e2 f7       	brpl	.-8      	; 0x222 <cero_en_bit+0x8>
 22a:	f1 e0       	ldi	r31, 0x01	; 1
 22c:	8f 27       	eor	r24, r31
}
 22e:	81 70       	andi	r24, 0x01	; 1
 230:	08 95       	ret

00000232 <boton>:

#define tec_ddr DDRD
#define tec_port PORTD
#define tec_pin PIND

void boton(volatile uint8_t *LUGAR, uint8_t BIT){
 232:	0f 93       	push	r16
 234:	1f 93       	push	r17
 236:	cf 93       	push	r28
 238:	8c 01       	movw	r16, r24
 23a:	c6 2f       	mov	r28, r22
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 23c:	8f e4       	ldi	r24, 0x4F	; 79
 23e:	93 ec       	ldi	r25, 0xC3	; 195
 240:	01 97       	sbiw	r24, 0x01	; 1
 242:	f1 f7       	brne	.-4      	; 0x240 <boton+0xe>
 244:	00 c0       	rjmp	.+0      	; 0x246 <boton+0x14>
 246:	00 00       	nop
	_delay_ms(50);
	while(cero_en_bit(LUGAR,BIT)){}
 248:	6c 2f       	mov	r22, r28
 24a:	c8 01       	movw	r24, r16
 24c:	0e 94 0d 01 	call	0x21a	; 0x21a <cero_en_bit>
 250:	81 11       	cpse	r24, r1
 252:	fa cf       	rjmp	.-12     	; 0x248 <boton+0x16>
 254:	8f e4       	ldi	r24, 0x4F	; 79
 256:	93 ec       	ldi	r25, 0xC3	; 195
 258:	01 97       	sbiw	r24, 0x01	; 1
 25a:	f1 f7       	brne	.-4      	; 0x258 <boton+0x26>
 25c:	00 c0       	rjmp	.+0      	; 0x25e <boton+0x2c>
 25e:	00 00       	nop
	_delay_ms(50);	
}
 260:	cf 91       	pop	r28
 262:	1f 91       	pop	r17
 264:	0f 91       	pop	r16
 266:	08 95       	ret

00000268 <Teclado>:

char Teclado(){
 268:	cf 93       	push	r28
	tec_ddr=0b00001111;
 26a:	8f e0       	ldi	r24, 0x0F	; 15
 26c:	81 bb       	out	0x11, r24	; 17
	char x='.';
 26e:	ce e2       	ldi	r28, 0x2E	; 46
	while(x=='.'){
 270:	a1 c0       	rjmp	.+322    	; 0x3b4 <Teclado+0x14c>
		tec_port= 0b11111110;
 272:	8e ef       	ldi	r24, 0xFE	; 254
 274:	82 bb       	out	0x12, r24	; 18
		if(cero_en_bit(&tec_pin,4))boton(&tec_pin,4),x='1';
 276:	64 e0       	ldi	r22, 0x04	; 4
 278:	80 e3       	ldi	r24, 0x30	; 48
 27a:	90 e0       	ldi	r25, 0x00	; 0
 27c:	0e 94 0d 01 	call	0x21a	; 0x21a <cero_en_bit>
 280:	88 23       	and	r24, r24
 282:	31 f0       	breq	.+12     	; 0x290 <Teclado+0x28>
 284:	64 e0       	ldi	r22, 0x04	; 4
 286:	80 e3       	ldi	r24, 0x30	; 48
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	0e 94 19 01 	call	0x232	; 0x232 <boton>
 28e:	c1 e3       	ldi	r28, 0x31	; 49
		if(cero_en_bit(&tec_pin,5))boton(&tec_pin,5),x='2';
 290:	65 e0       	ldi	r22, 0x05	; 5
 292:	80 e3       	ldi	r24, 0x30	; 48
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	0e 94 0d 01 	call	0x21a	; 0x21a <cero_en_bit>
 29a:	88 23       	and	r24, r24
 29c:	31 f0       	breq	.+12     	; 0x2aa <Teclado+0x42>
 29e:	65 e0       	ldi	r22, 0x05	; 5
 2a0:	80 e3       	ldi	r24, 0x30	; 48
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	0e 94 19 01 	call	0x232	; 0x232 <boton>
 2a8:	c2 e3       	ldi	r28, 0x32	; 50
		if(cero_en_bit(&tec_pin,6))boton(&tec_pin,6),x='3';
 2aa:	66 e0       	ldi	r22, 0x06	; 6
 2ac:	80 e3       	ldi	r24, 0x30	; 48
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	0e 94 0d 01 	call	0x21a	; 0x21a <cero_en_bit>
 2b4:	88 23       	and	r24, r24
 2b6:	31 f0       	breq	.+12     	; 0x2c4 <Teclado+0x5c>
 2b8:	66 e0       	ldi	r22, 0x06	; 6
 2ba:	80 e3       	ldi	r24, 0x30	; 48
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	0e 94 19 01 	call	0x232	; 0x232 <boton>
 2c2:	c3 e3       	ldi	r28, 0x33	; 51
		//if(cero_en_bit(&tec_pin,0))boton(&tec_pin,0,1);
		if(x!='.')break;
 2c4:	ce 32       	cpi	r28, 0x2E	; 46
 2c6:	09 f0       	breq	.+2      	; 0x2ca <Teclado+0x62>
 2c8:	78 c0       	rjmp	.+240    	; 0x3ba <Teclado+0x152>
		tec_port= 0b11111101;
 2ca:	8d ef       	ldi	r24, 0xFD	; 253
 2cc:	82 bb       	out	0x12, r24	; 18
		if(cero_en_bit(&tec_pin,4))boton(&tec_pin,4),x='4';
 2ce:	64 e0       	ldi	r22, 0x04	; 4
 2d0:	80 e3       	ldi	r24, 0x30	; 48
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	0e 94 0d 01 	call	0x21a	; 0x21a <cero_en_bit>
 2d8:	88 23       	and	r24, r24
 2da:	31 f0       	breq	.+12     	; 0x2e8 <Teclado+0x80>
 2dc:	64 e0       	ldi	r22, 0x04	; 4
 2de:	80 e3       	ldi	r24, 0x30	; 48
 2e0:	90 e0       	ldi	r25, 0x00	; 0
 2e2:	0e 94 19 01 	call	0x232	; 0x232 <boton>
 2e6:	c4 e3       	ldi	r28, 0x34	; 52
		if(cero_en_bit(&tec_pin,5))boton(&tec_pin,5),x='5';
 2e8:	65 e0       	ldi	r22, 0x05	; 5
 2ea:	80 e3       	ldi	r24, 0x30	; 48
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	0e 94 0d 01 	call	0x21a	; 0x21a <cero_en_bit>
 2f2:	88 23       	and	r24, r24
 2f4:	31 f0       	breq	.+12     	; 0x302 <Teclado+0x9a>
 2f6:	65 e0       	ldi	r22, 0x05	; 5
 2f8:	80 e3       	ldi	r24, 0x30	; 48
 2fa:	90 e0       	ldi	r25, 0x00	; 0
 2fc:	0e 94 19 01 	call	0x232	; 0x232 <boton>
 300:	c5 e3       	ldi	r28, 0x35	; 53
		if(cero_en_bit(&tec_pin,6))boton(&tec_pin,6),x='6';
 302:	66 e0       	ldi	r22, 0x06	; 6
 304:	80 e3       	ldi	r24, 0x30	; 48
 306:	90 e0       	ldi	r25, 0x00	; 0
 308:	0e 94 0d 01 	call	0x21a	; 0x21a <cero_en_bit>
 30c:	88 23       	and	r24, r24
 30e:	31 f0       	breq	.+12     	; 0x31c <Teclado+0xb4>
 310:	66 e0       	ldi	r22, 0x06	; 6
 312:	80 e3       	ldi	r24, 0x30	; 48
 314:	90 e0       	ldi	r25, 0x00	; 0
 316:	0e 94 19 01 	call	0x232	; 0x232 <boton>
 31a:	c6 e3       	ldi	r28, 0x36	; 54
		//if(cero_en_bit(&tec_pin,7))boton(&tec_pin,7),x='1';
		if(x!='.')break;
 31c:	ce 32       	cpi	r28, 0x2E	; 46
 31e:	09 f0       	breq	.+2      	; 0x322 <Teclado+0xba>
 320:	4c c0       	rjmp	.+152    	; 0x3ba <Teclado+0x152>
		tec_port= 0b11111011;
 322:	8b ef       	ldi	r24, 0xFB	; 251
 324:	82 bb       	out	0x12, r24	; 18
		if(cero_en_bit(&tec_pin,4))boton(&tec_pin,4),x='7';
 326:	64 e0       	ldi	r22, 0x04	; 4
 328:	80 e3       	ldi	r24, 0x30	; 48
 32a:	90 e0       	ldi	r25, 0x00	; 0
 32c:	0e 94 0d 01 	call	0x21a	; 0x21a <cero_en_bit>
 330:	88 23       	and	r24, r24
 332:	31 f0       	breq	.+12     	; 0x340 <Teclado+0xd8>
 334:	64 e0       	ldi	r22, 0x04	; 4
 336:	80 e3       	ldi	r24, 0x30	; 48
 338:	90 e0       	ldi	r25, 0x00	; 0
 33a:	0e 94 19 01 	call	0x232	; 0x232 <boton>
 33e:	c7 e3       	ldi	r28, 0x37	; 55
		if(cero_en_bit(&tec_pin,5))boton(&tec_pin,5),x='8';
 340:	65 e0       	ldi	r22, 0x05	; 5
 342:	80 e3       	ldi	r24, 0x30	; 48
 344:	90 e0       	ldi	r25, 0x00	; 0
 346:	0e 94 0d 01 	call	0x21a	; 0x21a <cero_en_bit>
 34a:	88 23       	and	r24, r24
 34c:	31 f0       	breq	.+12     	; 0x35a <Teclado+0xf2>
 34e:	65 e0       	ldi	r22, 0x05	; 5
 350:	80 e3       	ldi	r24, 0x30	; 48
 352:	90 e0       	ldi	r25, 0x00	; 0
 354:	0e 94 19 01 	call	0x232	; 0x232 <boton>
 358:	c8 e3       	ldi	r28, 0x38	; 56
		if(cero_en_bit(&tec_pin,6))boton(&tec_pin,6),x='9';
 35a:	66 e0       	ldi	r22, 0x06	; 6
 35c:	80 e3       	ldi	r24, 0x30	; 48
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	0e 94 0d 01 	call	0x21a	; 0x21a <cero_en_bit>
 364:	88 23       	and	r24, r24
 366:	31 f0       	breq	.+12     	; 0x374 <Teclado+0x10c>
 368:	66 e0       	ldi	r22, 0x06	; 6
 36a:	80 e3       	ldi	r24, 0x30	; 48
 36c:	90 e0       	ldi	r25, 0x00	; 0
 36e:	0e 94 19 01 	call	0x232	; 0x232 <boton>
 372:	c9 e3       	ldi	r28, 0x39	; 57
		//if(cero_en_bit(&tec_pin,7))boton(&tec_pin,7),x='1';
		if(x!='.')break;
 374:	ce 32       	cpi	r28, 0x2E	; 46
 376:	09 f5       	brne	.+66     	; 0x3ba <Teclado+0x152>
		tec_port= 0b11110111;
 378:	87 ef       	ldi	r24, 0xF7	; 247
 37a:	82 bb       	out	0x12, r24	; 18
		if(cero_en_bit(&tec_pin,4))boton(&tec_pin,4),x='O';
 37c:	64 e0       	ldi	r22, 0x04	; 4
 37e:	80 e3       	ldi	r24, 0x30	; 48
 380:	90 e0       	ldi	r25, 0x00	; 0
 382:	0e 94 0d 01 	call	0x21a	; 0x21a <cero_en_bit>
 386:	88 23       	and	r24, r24
 388:	31 f0       	breq	.+12     	; 0x396 <Teclado+0x12e>
 38a:	64 e0       	ldi	r22, 0x04	; 4
 38c:	80 e3       	ldi	r24, 0x30	; 48
 38e:	90 e0       	ldi	r25, 0x00	; 0
 390:	0e 94 19 01 	call	0x232	; 0x232 <boton>
 394:	cf e4       	ldi	r28, 0x4F	; 79
		if(cero_en_bit(&tec_pin,5))boton(&tec_pin,5),x='0';
 396:	65 e0       	ldi	r22, 0x05	; 5
 398:	80 e3       	ldi	r24, 0x30	; 48
 39a:	90 e0       	ldi	r25, 0x00	; 0
 39c:	0e 94 0d 01 	call	0x21a	; 0x21a <cero_en_bit>
 3a0:	88 23       	and	r24, r24
 3a2:	31 f0       	breq	.+12     	; 0x3b0 <Teclado+0x148>
 3a4:	65 e0       	ldi	r22, 0x05	; 5
 3a6:	80 e3       	ldi	r24, 0x30	; 48
 3a8:	90 e0       	ldi	r25, 0x00	; 0
 3aa:	0e 94 19 01 	call	0x232	; 0x232 <boton>
 3ae:	c0 e3       	ldi	r28, 0x30	; 48
		//if(cero_en_bit(&tec_pin,6))boton(&tec_pin,6),x=52;
		//if(cero_en_bit(&tec_pin,7))boton(&tec_pin,7),x=49;
		if(x!='.')break;	
 3b0:	ce 32       	cpi	r28, 0x2E	; 46
 3b2:	19 f4       	brne	.+6      	; 0x3ba <Teclado+0x152>
}

char Teclado(){
	tec_ddr=0b00001111;
	char x='.';
	while(x=='.'){
 3b4:	ce 32       	cpi	r28, 0x2E	; 46
 3b6:	09 f4       	brne	.+2      	; 0x3ba <Teclado+0x152>
 3b8:	5c cf       	rjmp	.-328    	; 0x272 <Teclado+0xa>
		//if(cero_en_bit(&tec_pin,6))boton(&tec_pin,6),x=52;
		//if(cero_en_bit(&tec_pin,7))boton(&tec_pin,7),x=49;
		if(x!='.')break;	
	}
	return x;
}
 3ba:	8c 2f       	mov	r24, r28
 3bc:	cf 91       	pop	r28
 3be:	08 95       	ret

000003c0 <main>:
int main(void)
{
	ini:;
	//sei();
	//clc();
	lcd_init(LCD_DISP_ON);
 3c0:	8c e0       	ldi	r24, 0x0C	; 12
 3c2:	0e 94 c2 00 	call	0x184	; 0x184 <lcd_init>
	//lcd_clrscr();
	DDRB= 0b11111111;
 3c6:	8f ef       	ldi	r24, 0xFF	; 255
 3c8:	87 bb       	out	0x17, r24	; 23
	DDRA= 0b11111111;
 3ca:	8a bb       	out	0x1a, r24	; 26
	//PORTB= 0b00000000
	TCCR0= 0b01101100;
 3cc:	8c e6       	ldi	r24, 0x6C	; 108
 3ce:	83 bf       	out	0x33, r24	; 51
	TCNT0= 0;
 3d0:	12 be       	out	0x32, r1	; 50
	TIMSK= 0;
 3d2:	19 be       	out	0x39, r1	; 57
	OCR0= 37;
 3d4:	85 e2       	ldi	r24, 0x25	; 37
 3d6:	8c bf       	out	0x3c, r24	; 60
 3d8:	2f ef       	ldi	r18, 0xFF	; 255
 3da:	84 e3       	ldi	r24, 0x34	; 52
 3dc:	9c e0       	ldi	r25, 0x0C	; 12
 3de:	21 50       	subi	r18, 0x01	; 1
 3e0:	80 40       	sbci	r24, 0x00	; 0
 3e2:	90 40       	sbci	r25, 0x00	; 0
 3e4:	e1 f7       	brne	.-8      	; 0x3de <main+0x1e>
 3e6:	00 c0       	rjmp	.+0      	; 0x3e8 <main+0x28>
 3e8:	00 00       	nop
	//8-37
	_delay_ms(1000);
	lcd_putc('0');
 3ea:	80 e3       	ldi	r24, 0x30	; 48
 3ec:	0e 94 ad 00 	call	0x15a	; 0x15a <lcd_putc>
	lcd_putc('0');
 3f0:	80 e3       	ldi	r24, 0x30	; 48
 3f2:	0e 94 ad 00 	call	0x15a	; 0x15a <lcd_putc>
	lcd_gotoxy(0,0);
 3f6:	60 e0       	ldi	r22, 0x00	; 0
 3f8:	80 e0       	ldi	r24, 0x00	; 0
 3fa:	0e 94 9f 00 	call	0x13e	; 0x13e <lcd_gotoxy>
	char x=Teclado();
 3fe:	0e 94 34 01 	call	0x268	; 0x268 <Teclado>
 402:	c8 2f       	mov	r28, r24
	lcd_putc(x);
 404:	0e 94 ad 00 	call	0x15a	; 0x15a <lcd_putc>
	char x2=Teclado();
 408:	0e 94 34 01 	call	0x268	; 0x268 <Teclado>
 40c:	d8 2f       	mov	r29, r24
	lcd_putc(x2);
 40e:	0e 94 ad 00 	call	0x15a	; 0x15a <lcd_putc>
	double t=(x-'0')*10;
 412:	8c 2f       	mov	r24, r28
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	c0 97       	sbiw	r24, 0x30	; 48
 418:	bc 01       	movw	r22, r24
 41a:	66 0f       	add	r22, r22
 41c:	77 1f       	adc	r23, r23
 41e:	88 0f       	add	r24, r24
 420:	99 1f       	adc	r25, r25
 422:	88 0f       	add	r24, r24
 424:	99 1f       	adc	r25, r25
 426:	88 0f       	add	r24, r24
 428:	99 1f       	adc	r25, r25
 42a:	68 0f       	add	r22, r24
 42c:	79 1f       	adc	r23, r25
 42e:	07 2e       	mov	r0, r23
 430:	00 0c       	add	r0, r0
 432:	88 0b       	sbc	r24, r24
 434:	99 0b       	sbc	r25, r25
 436:	0e 94 70 03 	call	0x6e0	; 0x6e0 <__floatsisf>
 43a:	6b 01       	movw	r12, r22
 43c:	7c 01       	movw	r14, r24
	t+=x2-'0';
 43e:	6d 2f       	mov	r22, r29
 440:	70 e0       	ldi	r23, 0x00	; 0
 442:	60 53       	subi	r22, 0x30	; 48
 444:	71 09       	sbc	r23, r1
 446:	07 2e       	mov	r0, r23
 448:	00 0c       	add	r0, r0
 44a:	88 0b       	sbc	r24, r24
 44c:	99 0b       	sbc	r25, r25
 44e:	0e 94 70 03 	call	0x6e0	; 0x6e0 <__floatsisf>
 452:	a7 01       	movw	r20, r14
 454:	96 01       	movw	r18, r12
 456:	0e 94 61 02 	call	0x4c2	; 0x4c2 <__addsf3>
	t*=1000;
 45a:	20 e0       	ldi	r18, 0x00	; 0
 45c:	30 e0       	ldi	r19, 0x00	; 0
 45e:	4a e7       	ldi	r20, 0x7A	; 122
 460:	54 e4       	ldi	r21, 0x44	; 68
 462:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <__mulsf3>
	t/=29;
 466:	20 e0       	ldi	r18, 0x00	; 0
 468:	30 e0       	ldi	r19, 0x00	; 0
 46a:	48 ee       	ldi	r20, 0xE8	; 232
 46c:	51 e4       	ldi	r21, 0x41	; 65
 46e:	0e 94 cd 02 	call	0x59a	; 0x59a <__divsf3>
 472:	6b 01       	movw	r12, r22
 474:	7c 01       	movw	r14, r24
	OCR0=8;
 476:	88 e0       	ldi	r24, 0x08	; 8
 478:	8c bf       	out	0x3c, r24	; 60
	delay_variable_ms(1000);
 47a:	88 ee       	ldi	r24, 0xE8	; 232
 47c:	93 e0       	ldi	r25, 0x03	; 3
 47e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <delay_variable_ms>
	for(int i=9;i<38;i++){
 482:	c9 e0       	ldi	r28, 0x09	; 9
 484:	d0 e0       	ldi	r29, 0x00	; 0
 486:	09 c0       	rjmp	.+18     	; 0x49a <__stack+0x3b>
		OCR0=i;
 488:	cc bf       	out	0x3c, r28	; 60
		delay_variable_ms(t);
 48a:	c7 01       	movw	r24, r14
 48c:	b6 01       	movw	r22, r12
 48e:	0e 94 3f 03 	call	0x67e	; 0x67e <__fixunssfsi>
 492:	cb 01       	movw	r24, r22
 494:	0e 94 fe 00 	call	0x1fc	; 0x1fc <delay_variable_ms>
	t+=x2-'0';
	t*=1000;
	t/=29;
	OCR0=8;
	delay_variable_ms(1000);
	for(int i=9;i<38;i++){
 498:	21 96       	adiw	r28, 0x01	; 1
 49a:	c6 32       	cpi	r28, 0x26	; 38
 49c:	d1 05       	cpc	r29, r1
 49e:	a4 f3       	brlt	.-24     	; 0x488 <__stack+0x29>
		OCR0=i;
		delay_variable_ms(t);
	}
	PORTA=1;
 4a0:	81 e0       	ldi	r24, 0x01	; 1
 4a2:	8b bb       	out	0x1b, r24	; 27
	PORTB=0b11100000;
 4a4:	80 ee       	ldi	r24, 0xE0	; 224
 4a6:	88 bb       	out	0x18, r24	; 24
 4a8:	8f ef       	ldi	r24, 0xFF	; 255
 4aa:	99 e6       	ldi	r25, 0x69	; 105
 4ac:	28 e1       	ldi	r18, 0x18	; 24
 4ae:	81 50       	subi	r24, 0x01	; 1
 4b0:	90 40       	sbci	r25, 0x00	; 0
 4b2:	20 40       	sbci	r18, 0x00	; 0
 4b4:	e1 f7       	brne	.-8      	; 0x4ae <__stack+0x4f>
 4b6:	00 c0       	rjmp	.+0      	; 0x4b8 <__stack+0x59>
 4b8:	00 00       	nop
	_delay_ms(2000);
	PORTA=0;
 4ba:	1b ba       	out	0x1b, r1	; 27
	PORTB=0;
 4bc:	18 ba       	out	0x18, r1	; 24
	goto ini;
 4be:	80 cf       	rjmp	.-256    	; 0x3c0 <main>

000004c0 <__subsf3>:
 4c0:	50 58       	subi	r21, 0x80	; 128

000004c2 <__addsf3>:
 4c2:	bb 27       	eor	r27, r27
 4c4:	aa 27       	eor	r26, r26
 4c6:	0e 94 78 02 	call	0x4f0	; 0x4f0 <__addsf3x>
 4ca:	0c 94 c2 03 	jmp	0x784	; 0x784 <__fp_round>
 4ce:	0e 94 b4 03 	call	0x768	; 0x768 <__fp_pscA>
 4d2:	38 f0       	brcs	.+14     	; 0x4e2 <__addsf3+0x20>
 4d4:	0e 94 bb 03 	call	0x776	; 0x776 <__fp_pscB>
 4d8:	20 f0       	brcs	.+8      	; 0x4e2 <__addsf3+0x20>
 4da:	39 f4       	brne	.+14     	; 0x4ea <__addsf3+0x28>
 4dc:	9f 3f       	cpi	r25, 0xFF	; 255
 4de:	19 f4       	brne	.+6      	; 0x4e6 <__addsf3+0x24>
 4e0:	26 f4       	brtc	.+8      	; 0x4ea <__addsf3+0x28>
 4e2:	0c 94 b1 03 	jmp	0x762	; 0x762 <__fp_nan>
 4e6:	0e f4       	brtc	.+2      	; 0x4ea <__addsf3+0x28>
 4e8:	e0 95       	com	r30
 4ea:	e7 fb       	bst	r30, 7
 4ec:	0c 94 ab 03 	jmp	0x756	; 0x756 <__fp_inf>

000004f0 <__addsf3x>:
 4f0:	e9 2f       	mov	r30, r25
 4f2:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <__fp_split3>
 4f6:	58 f3       	brcs	.-42     	; 0x4ce <__addsf3+0xc>
 4f8:	ba 17       	cp	r27, r26
 4fa:	62 07       	cpc	r22, r18
 4fc:	73 07       	cpc	r23, r19
 4fe:	84 07       	cpc	r24, r20
 500:	95 07       	cpc	r25, r21
 502:	20 f0       	brcs	.+8      	; 0x50c <__addsf3x+0x1c>
 504:	79 f4       	brne	.+30     	; 0x524 <__addsf3x+0x34>
 506:	a6 f5       	brtc	.+104    	; 0x570 <__addsf3x+0x80>
 508:	0c 94 f5 03 	jmp	0x7ea	; 0x7ea <__fp_zero>
 50c:	0e f4       	brtc	.+2      	; 0x510 <__addsf3x+0x20>
 50e:	e0 95       	com	r30
 510:	0b 2e       	mov	r0, r27
 512:	ba 2f       	mov	r27, r26
 514:	a0 2d       	mov	r26, r0
 516:	0b 01       	movw	r0, r22
 518:	b9 01       	movw	r22, r18
 51a:	90 01       	movw	r18, r0
 51c:	0c 01       	movw	r0, r24
 51e:	ca 01       	movw	r24, r20
 520:	a0 01       	movw	r20, r0
 522:	11 24       	eor	r1, r1
 524:	ff 27       	eor	r31, r31
 526:	59 1b       	sub	r21, r25
 528:	99 f0       	breq	.+38     	; 0x550 <__addsf3x+0x60>
 52a:	59 3f       	cpi	r21, 0xF9	; 249
 52c:	50 f4       	brcc	.+20     	; 0x542 <__addsf3x+0x52>
 52e:	50 3e       	cpi	r21, 0xE0	; 224
 530:	68 f1       	brcs	.+90     	; 0x58c <__addsf3x+0x9c>
 532:	1a 16       	cp	r1, r26
 534:	f0 40       	sbci	r31, 0x00	; 0
 536:	a2 2f       	mov	r26, r18
 538:	23 2f       	mov	r18, r19
 53a:	34 2f       	mov	r19, r20
 53c:	44 27       	eor	r20, r20
 53e:	58 5f       	subi	r21, 0xF8	; 248
 540:	f3 cf       	rjmp	.-26     	; 0x528 <__addsf3x+0x38>
 542:	46 95       	lsr	r20
 544:	37 95       	ror	r19
 546:	27 95       	ror	r18
 548:	a7 95       	ror	r26
 54a:	f0 40       	sbci	r31, 0x00	; 0
 54c:	53 95       	inc	r21
 54e:	c9 f7       	brne	.-14     	; 0x542 <__addsf3x+0x52>
 550:	7e f4       	brtc	.+30     	; 0x570 <__addsf3x+0x80>
 552:	1f 16       	cp	r1, r31
 554:	ba 0b       	sbc	r27, r26
 556:	62 0b       	sbc	r22, r18
 558:	73 0b       	sbc	r23, r19
 55a:	84 0b       	sbc	r24, r20
 55c:	ba f0       	brmi	.+46     	; 0x58c <__addsf3x+0x9c>
 55e:	91 50       	subi	r25, 0x01	; 1
 560:	a1 f0       	breq	.+40     	; 0x58a <__addsf3x+0x9a>
 562:	ff 0f       	add	r31, r31
 564:	bb 1f       	adc	r27, r27
 566:	66 1f       	adc	r22, r22
 568:	77 1f       	adc	r23, r23
 56a:	88 1f       	adc	r24, r24
 56c:	c2 f7       	brpl	.-16     	; 0x55e <__addsf3x+0x6e>
 56e:	0e c0       	rjmp	.+28     	; 0x58c <__addsf3x+0x9c>
 570:	ba 0f       	add	r27, r26
 572:	62 1f       	adc	r22, r18
 574:	73 1f       	adc	r23, r19
 576:	84 1f       	adc	r24, r20
 578:	48 f4       	brcc	.+18     	; 0x58c <__addsf3x+0x9c>
 57a:	87 95       	ror	r24
 57c:	77 95       	ror	r23
 57e:	67 95       	ror	r22
 580:	b7 95       	ror	r27
 582:	f7 95       	ror	r31
 584:	9e 3f       	cpi	r25, 0xFE	; 254
 586:	08 f0       	brcs	.+2      	; 0x58a <__addsf3x+0x9a>
 588:	b0 cf       	rjmp	.-160    	; 0x4ea <__addsf3+0x28>
 58a:	93 95       	inc	r25
 58c:	88 0f       	add	r24, r24
 58e:	08 f0       	brcs	.+2      	; 0x592 <__addsf3x+0xa2>
 590:	99 27       	eor	r25, r25
 592:	ee 0f       	add	r30, r30
 594:	97 95       	ror	r25
 596:	87 95       	ror	r24
 598:	08 95       	ret

0000059a <__divsf3>:
 59a:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <__divsf3x>
 59e:	0c 94 c2 03 	jmp	0x784	; 0x784 <__fp_round>
 5a2:	0e 94 bb 03 	call	0x776	; 0x776 <__fp_pscB>
 5a6:	58 f0       	brcs	.+22     	; 0x5be <__divsf3+0x24>
 5a8:	0e 94 b4 03 	call	0x768	; 0x768 <__fp_pscA>
 5ac:	40 f0       	brcs	.+16     	; 0x5be <__divsf3+0x24>
 5ae:	29 f4       	brne	.+10     	; 0x5ba <__divsf3+0x20>
 5b0:	5f 3f       	cpi	r21, 0xFF	; 255
 5b2:	29 f0       	breq	.+10     	; 0x5be <__divsf3+0x24>
 5b4:	0c 94 ab 03 	jmp	0x756	; 0x756 <__fp_inf>
 5b8:	51 11       	cpse	r21, r1
 5ba:	0c 94 f6 03 	jmp	0x7ec	; 0x7ec <__fp_szero>
 5be:	0c 94 b1 03 	jmp	0x762	; 0x762 <__fp_nan>

000005c2 <__divsf3x>:
 5c2:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <__fp_split3>
 5c6:	68 f3       	brcs	.-38     	; 0x5a2 <__divsf3+0x8>

000005c8 <__divsf3_pse>:
 5c8:	99 23       	and	r25, r25
 5ca:	b1 f3       	breq	.-20     	; 0x5b8 <__divsf3+0x1e>
 5cc:	55 23       	and	r21, r21
 5ce:	91 f3       	breq	.-28     	; 0x5b4 <__divsf3+0x1a>
 5d0:	95 1b       	sub	r25, r21
 5d2:	55 0b       	sbc	r21, r21
 5d4:	bb 27       	eor	r27, r27
 5d6:	aa 27       	eor	r26, r26
 5d8:	62 17       	cp	r22, r18
 5da:	73 07       	cpc	r23, r19
 5dc:	84 07       	cpc	r24, r20
 5de:	38 f0       	brcs	.+14     	; 0x5ee <__divsf3_pse+0x26>
 5e0:	9f 5f       	subi	r25, 0xFF	; 255
 5e2:	5f 4f       	sbci	r21, 0xFF	; 255
 5e4:	22 0f       	add	r18, r18
 5e6:	33 1f       	adc	r19, r19
 5e8:	44 1f       	adc	r20, r20
 5ea:	aa 1f       	adc	r26, r26
 5ec:	a9 f3       	breq	.-22     	; 0x5d8 <__divsf3_pse+0x10>
 5ee:	35 d0       	rcall	.+106    	; 0x65a <__divsf3_pse+0x92>
 5f0:	0e 2e       	mov	r0, r30
 5f2:	3a f0       	brmi	.+14     	; 0x602 <__divsf3_pse+0x3a>
 5f4:	e0 e8       	ldi	r30, 0x80	; 128
 5f6:	32 d0       	rcall	.+100    	; 0x65c <__divsf3_pse+0x94>
 5f8:	91 50       	subi	r25, 0x01	; 1
 5fa:	50 40       	sbci	r21, 0x00	; 0
 5fc:	e6 95       	lsr	r30
 5fe:	00 1c       	adc	r0, r0
 600:	ca f7       	brpl	.-14     	; 0x5f4 <__divsf3_pse+0x2c>
 602:	2b d0       	rcall	.+86     	; 0x65a <__divsf3_pse+0x92>
 604:	fe 2f       	mov	r31, r30
 606:	29 d0       	rcall	.+82     	; 0x65a <__divsf3_pse+0x92>
 608:	66 0f       	add	r22, r22
 60a:	77 1f       	adc	r23, r23
 60c:	88 1f       	adc	r24, r24
 60e:	bb 1f       	adc	r27, r27
 610:	26 17       	cp	r18, r22
 612:	37 07       	cpc	r19, r23
 614:	48 07       	cpc	r20, r24
 616:	ab 07       	cpc	r26, r27
 618:	b0 e8       	ldi	r27, 0x80	; 128
 61a:	09 f0       	breq	.+2      	; 0x61e <__divsf3_pse+0x56>
 61c:	bb 0b       	sbc	r27, r27
 61e:	80 2d       	mov	r24, r0
 620:	bf 01       	movw	r22, r30
 622:	ff 27       	eor	r31, r31
 624:	93 58       	subi	r25, 0x83	; 131
 626:	5f 4f       	sbci	r21, 0xFF	; 255
 628:	3a f0       	brmi	.+14     	; 0x638 <__divsf3_pse+0x70>
 62a:	9e 3f       	cpi	r25, 0xFE	; 254
 62c:	51 05       	cpc	r21, r1
 62e:	78 f0       	brcs	.+30     	; 0x64e <__divsf3_pse+0x86>
 630:	0c 94 ab 03 	jmp	0x756	; 0x756 <__fp_inf>
 634:	0c 94 f6 03 	jmp	0x7ec	; 0x7ec <__fp_szero>
 638:	5f 3f       	cpi	r21, 0xFF	; 255
 63a:	e4 f3       	brlt	.-8      	; 0x634 <__divsf3_pse+0x6c>
 63c:	98 3e       	cpi	r25, 0xE8	; 232
 63e:	d4 f3       	brlt	.-12     	; 0x634 <__divsf3_pse+0x6c>
 640:	86 95       	lsr	r24
 642:	77 95       	ror	r23
 644:	67 95       	ror	r22
 646:	b7 95       	ror	r27
 648:	f7 95       	ror	r31
 64a:	9f 5f       	subi	r25, 0xFF	; 255
 64c:	c9 f7       	brne	.-14     	; 0x640 <__divsf3_pse+0x78>
 64e:	88 0f       	add	r24, r24
 650:	91 1d       	adc	r25, r1
 652:	96 95       	lsr	r25
 654:	87 95       	ror	r24
 656:	97 f9       	bld	r25, 7
 658:	08 95       	ret
 65a:	e1 e0       	ldi	r30, 0x01	; 1
 65c:	66 0f       	add	r22, r22
 65e:	77 1f       	adc	r23, r23
 660:	88 1f       	adc	r24, r24
 662:	bb 1f       	adc	r27, r27
 664:	62 17       	cp	r22, r18
 666:	73 07       	cpc	r23, r19
 668:	84 07       	cpc	r24, r20
 66a:	ba 07       	cpc	r27, r26
 66c:	20 f0       	brcs	.+8      	; 0x676 <__divsf3_pse+0xae>
 66e:	62 1b       	sub	r22, r18
 670:	73 0b       	sbc	r23, r19
 672:	84 0b       	sbc	r24, r20
 674:	ba 0b       	sbc	r27, r26
 676:	ee 1f       	adc	r30, r30
 678:	88 f7       	brcc	.-30     	; 0x65c <__divsf3_pse+0x94>
 67a:	e0 95       	com	r30
 67c:	08 95       	ret

0000067e <__fixunssfsi>:
 67e:	0e 94 db 03 	call	0x7b6	; 0x7b6 <__fp_splitA>
 682:	88 f0       	brcs	.+34     	; 0x6a6 <__fixunssfsi+0x28>
 684:	9f 57       	subi	r25, 0x7F	; 127
 686:	98 f0       	brcs	.+38     	; 0x6ae <__fixunssfsi+0x30>
 688:	b9 2f       	mov	r27, r25
 68a:	99 27       	eor	r25, r25
 68c:	b7 51       	subi	r27, 0x17	; 23
 68e:	b0 f0       	brcs	.+44     	; 0x6bc <__fixunssfsi+0x3e>
 690:	e1 f0       	breq	.+56     	; 0x6ca <__fixunssfsi+0x4c>
 692:	66 0f       	add	r22, r22
 694:	77 1f       	adc	r23, r23
 696:	88 1f       	adc	r24, r24
 698:	99 1f       	adc	r25, r25
 69a:	1a f0       	brmi	.+6      	; 0x6a2 <__fixunssfsi+0x24>
 69c:	ba 95       	dec	r27
 69e:	c9 f7       	brne	.-14     	; 0x692 <__fixunssfsi+0x14>
 6a0:	14 c0       	rjmp	.+40     	; 0x6ca <__fixunssfsi+0x4c>
 6a2:	b1 30       	cpi	r27, 0x01	; 1
 6a4:	91 f0       	breq	.+36     	; 0x6ca <__fixunssfsi+0x4c>
 6a6:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__fp_zero>
 6aa:	b1 e0       	ldi	r27, 0x01	; 1
 6ac:	08 95       	ret
 6ae:	0c 94 f5 03 	jmp	0x7ea	; 0x7ea <__fp_zero>
 6b2:	67 2f       	mov	r22, r23
 6b4:	78 2f       	mov	r23, r24
 6b6:	88 27       	eor	r24, r24
 6b8:	b8 5f       	subi	r27, 0xF8	; 248
 6ba:	39 f0       	breq	.+14     	; 0x6ca <__fixunssfsi+0x4c>
 6bc:	b9 3f       	cpi	r27, 0xF9	; 249
 6be:	cc f3       	brlt	.-14     	; 0x6b2 <__fixunssfsi+0x34>
 6c0:	86 95       	lsr	r24
 6c2:	77 95       	ror	r23
 6c4:	67 95       	ror	r22
 6c6:	b3 95       	inc	r27
 6c8:	d9 f7       	brne	.-10     	; 0x6c0 <__fixunssfsi+0x42>
 6ca:	3e f4       	brtc	.+14     	; 0x6da <__fixunssfsi+0x5c>
 6cc:	90 95       	com	r25
 6ce:	80 95       	com	r24
 6d0:	70 95       	com	r23
 6d2:	61 95       	neg	r22
 6d4:	7f 4f       	sbci	r23, 0xFF	; 255
 6d6:	8f 4f       	sbci	r24, 0xFF	; 255
 6d8:	9f 4f       	sbci	r25, 0xFF	; 255
 6da:	08 95       	ret

000006dc <__floatunsisf>:
 6dc:	e8 94       	clt
 6de:	09 c0       	rjmp	.+18     	; 0x6f2 <__floatsisf+0x12>

000006e0 <__floatsisf>:
 6e0:	97 fb       	bst	r25, 7
 6e2:	3e f4       	brtc	.+14     	; 0x6f2 <__floatsisf+0x12>
 6e4:	90 95       	com	r25
 6e6:	80 95       	com	r24
 6e8:	70 95       	com	r23
 6ea:	61 95       	neg	r22
 6ec:	7f 4f       	sbci	r23, 0xFF	; 255
 6ee:	8f 4f       	sbci	r24, 0xFF	; 255
 6f0:	9f 4f       	sbci	r25, 0xFF	; 255
 6f2:	99 23       	and	r25, r25
 6f4:	a9 f0       	breq	.+42     	; 0x720 <__floatsisf+0x40>
 6f6:	f9 2f       	mov	r31, r25
 6f8:	96 e9       	ldi	r25, 0x96	; 150
 6fa:	bb 27       	eor	r27, r27
 6fc:	93 95       	inc	r25
 6fe:	f6 95       	lsr	r31
 700:	87 95       	ror	r24
 702:	77 95       	ror	r23
 704:	67 95       	ror	r22
 706:	b7 95       	ror	r27
 708:	f1 11       	cpse	r31, r1
 70a:	f8 cf       	rjmp	.-16     	; 0x6fc <__floatsisf+0x1c>
 70c:	fa f4       	brpl	.+62     	; 0x74c <__floatsisf+0x6c>
 70e:	bb 0f       	add	r27, r27
 710:	11 f4       	brne	.+4      	; 0x716 <__floatsisf+0x36>
 712:	60 ff       	sbrs	r22, 0
 714:	1b c0       	rjmp	.+54     	; 0x74c <__floatsisf+0x6c>
 716:	6f 5f       	subi	r22, 0xFF	; 255
 718:	7f 4f       	sbci	r23, 0xFF	; 255
 71a:	8f 4f       	sbci	r24, 0xFF	; 255
 71c:	9f 4f       	sbci	r25, 0xFF	; 255
 71e:	16 c0       	rjmp	.+44     	; 0x74c <__floatsisf+0x6c>
 720:	88 23       	and	r24, r24
 722:	11 f0       	breq	.+4      	; 0x728 <__floatsisf+0x48>
 724:	96 e9       	ldi	r25, 0x96	; 150
 726:	11 c0       	rjmp	.+34     	; 0x74a <__floatsisf+0x6a>
 728:	77 23       	and	r23, r23
 72a:	21 f0       	breq	.+8      	; 0x734 <__floatsisf+0x54>
 72c:	9e e8       	ldi	r25, 0x8E	; 142
 72e:	87 2f       	mov	r24, r23
 730:	76 2f       	mov	r23, r22
 732:	05 c0       	rjmp	.+10     	; 0x73e <__floatsisf+0x5e>
 734:	66 23       	and	r22, r22
 736:	71 f0       	breq	.+28     	; 0x754 <__floatsisf+0x74>
 738:	96 e8       	ldi	r25, 0x86	; 134
 73a:	86 2f       	mov	r24, r22
 73c:	70 e0       	ldi	r23, 0x00	; 0
 73e:	60 e0       	ldi	r22, 0x00	; 0
 740:	2a f0       	brmi	.+10     	; 0x74c <__floatsisf+0x6c>
 742:	9a 95       	dec	r25
 744:	66 0f       	add	r22, r22
 746:	77 1f       	adc	r23, r23
 748:	88 1f       	adc	r24, r24
 74a:	da f7       	brpl	.-10     	; 0x742 <__floatsisf+0x62>
 74c:	88 0f       	add	r24, r24
 74e:	96 95       	lsr	r25
 750:	87 95       	ror	r24
 752:	97 f9       	bld	r25, 7
 754:	08 95       	ret

00000756 <__fp_inf>:
 756:	97 f9       	bld	r25, 7
 758:	9f 67       	ori	r25, 0x7F	; 127
 75a:	80 e8       	ldi	r24, 0x80	; 128
 75c:	70 e0       	ldi	r23, 0x00	; 0
 75e:	60 e0       	ldi	r22, 0x00	; 0
 760:	08 95       	ret

00000762 <__fp_nan>:
 762:	9f ef       	ldi	r25, 0xFF	; 255
 764:	80 ec       	ldi	r24, 0xC0	; 192
 766:	08 95       	ret

00000768 <__fp_pscA>:
 768:	00 24       	eor	r0, r0
 76a:	0a 94       	dec	r0
 76c:	16 16       	cp	r1, r22
 76e:	17 06       	cpc	r1, r23
 770:	18 06       	cpc	r1, r24
 772:	09 06       	cpc	r0, r25
 774:	08 95       	ret

00000776 <__fp_pscB>:
 776:	00 24       	eor	r0, r0
 778:	0a 94       	dec	r0
 77a:	12 16       	cp	r1, r18
 77c:	13 06       	cpc	r1, r19
 77e:	14 06       	cpc	r1, r20
 780:	05 06       	cpc	r0, r21
 782:	08 95       	ret

00000784 <__fp_round>:
 784:	09 2e       	mov	r0, r25
 786:	03 94       	inc	r0
 788:	00 0c       	add	r0, r0
 78a:	11 f4       	brne	.+4      	; 0x790 <__fp_round+0xc>
 78c:	88 23       	and	r24, r24
 78e:	52 f0       	brmi	.+20     	; 0x7a4 <__fp_round+0x20>
 790:	bb 0f       	add	r27, r27
 792:	40 f4       	brcc	.+16     	; 0x7a4 <__fp_round+0x20>
 794:	bf 2b       	or	r27, r31
 796:	11 f4       	brne	.+4      	; 0x79c <__fp_round+0x18>
 798:	60 ff       	sbrs	r22, 0
 79a:	04 c0       	rjmp	.+8      	; 0x7a4 <__fp_round+0x20>
 79c:	6f 5f       	subi	r22, 0xFF	; 255
 79e:	7f 4f       	sbci	r23, 0xFF	; 255
 7a0:	8f 4f       	sbci	r24, 0xFF	; 255
 7a2:	9f 4f       	sbci	r25, 0xFF	; 255
 7a4:	08 95       	ret

000007a6 <__fp_split3>:
 7a6:	57 fd       	sbrc	r21, 7
 7a8:	90 58       	subi	r25, 0x80	; 128
 7aa:	44 0f       	add	r20, r20
 7ac:	55 1f       	adc	r21, r21
 7ae:	59 f0       	breq	.+22     	; 0x7c6 <__fp_splitA+0x10>
 7b0:	5f 3f       	cpi	r21, 0xFF	; 255
 7b2:	71 f0       	breq	.+28     	; 0x7d0 <__fp_splitA+0x1a>
 7b4:	47 95       	ror	r20

000007b6 <__fp_splitA>:
 7b6:	88 0f       	add	r24, r24
 7b8:	97 fb       	bst	r25, 7
 7ba:	99 1f       	adc	r25, r25
 7bc:	61 f0       	breq	.+24     	; 0x7d6 <__fp_splitA+0x20>
 7be:	9f 3f       	cpi	r25, 0xFF	; 255
 7c0:	79 f0       	breq	.+30     	; 0x7e0 <__fp_splitA+0x2a>
 7c2:	87 95       	ror	r24
 7c4:	08 95       	ret
 7c6:	12 16       	cp	r1, r18
 7c8:	13 06       	cpc	r1, r19
 7ca:	14 06       	cpc	r1, r20
 7cc:	55 1f       	adc	r21, r21
 7ce:	f2 cf       	rjmp	.-28     	; 0x7b4 <__fp_split3+0xe>
 7d0:	46 95       	lsr	r20
 7d2:	f1 df       	rcall	.-30     	; 0x7b6 <__fp_splitA>
 7d4:	08 c0       	rjmp	.+16     	; 0x7e6 <__fp_splitA+0x30>
 7d6:	16 16       	cp	r1, r22
 7d8:	17 06       	cpc	r1, r23
 7da:	18 06       	cpc	r1, r24
 7dc:	99 1f       	adc	r25, r25
 7de:	f1 cf       	rjmp	.-30     	; 0x7c2 <__fp_splitA+0xc>
 7e0:	86 95       	lsr	r24
 7e2:	71 05       	cpc	r23, r1
 7e4:	61 05       	cpc	r22, r1
 7e6:	08 94       	sec
 7e8:	08 95       	ret

000007ea <__fp_zero>:
 7ea:	e8 94       	clt

000007ec <__fp_szero>:
 7ec:	bb 27       	eor	r27, r27
 7ee:	66 27       	eor	r22, r22
 7f0:	77 27       	eor	r23, r23
 7f2:	cb 01       	movw	r24, r22
 7f4:	97 f9       	bld	r25, 7
 7f6:	08 95       	ret

000007f8 <__mulsf3>:
 7f8:	0e 94 0f 04 	call	0x81e	; 0x81e <__mulsf3x>
 7fc:	0c 94 c2 03 	jmp	0x784	; 0x784 <__fp_round>
 800:	0e 94 b4 03 	call	0x768	; 0x768 <__fp_pscA>
 804:	38 f0       	brcs	.+14     	; 0x814 <__mulsf3+0x1c>
 806:	0e 94 bb 03 	call	0x776	; 0x776 <__fp_pscB>
 80a:	20 f0       	brcs	.+8      	; 0x814 <__mulsf3+0x1c>
 80c:	95 23       	and	r25, r21
 80e:	11 f0       	breq	.+4      	; 0x814 <__mulsf3+0x1c>
 810:	0c 94 ab 03 	jmp	0x756	; 0x756 <__fp_inf>
 814:	0c 94 b1 03 	jmp	0x762	; 0x762 <__fp_nan>
 818:	11 24       	eor	r1, r1
 81a:	0c 94 f6 03 	jmp	0x7ec	; 0x7ec <__fp_szero>

0000081e <__mulsf3x>:
 81e:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <__fp_split3>
 822:	70 f3       	brcs	.-36     	; 0x800 <__mulsf3+0x8>

00000824 <__mulsf3_pse>:
 824:	95 9f       	mul	r25, r21
 826:	c1 f3       	breq	.-16     	; 0x818 <__mulsf3+0x20>
 828:	95 0f       	add	r25, r21
 82a:	50 e0       	ldi	r21, 0x00	; 0
 82c:	55 1f       	adc	r21, r21
 82e:	62 9f       	mul	r22, r18
 830:	f0 01       	movw	r30, r0
 832:	72 9f       	mul	r23, r18
 834:	bb 27       	eor	r27, r27
 836:	f0 0d       	add	r31, r0
 838:	b1 1d       	adc	r27, r1
 83a:	63 9f       	mul	r22, r19
 83c:	aa 27       	eor	r26, r26
 83e:	f0 0d       	add	r31, r0
 840:	b1 1d       	adc	r27, r1
 842:	aa 1f       	adc	r26, r26
 844:	64 9f       	mul	r22, r20
 846:	66 27       	eor	r22, r22
 848:	b0 0d       	add	r27, r0
 84a:	a1 1d       	adc	r26, r1
 84c:	66 1f       	adc	r22, r22
 84e:	82 9f       	mul	r24, r18
 850:	22 27       	eor	r18, r18
 852:	b0 0d       	add	r27, r0
 854:	a1 1d       	adc	r26, r1
 856:	62 1f       	adc	r22, r18
 858:	73 9f       	mul	r23, r19
 85a:	b0 0d       	add	r27, r0
 85c:	a1 1d       	adc	r26, r1
 85e:	62 1f       	adc	r22, r18
 860:	83 9f       	mul	r24, r19
 862:	a0 0d       	add	r26, r0
 864:	61 1d       	adc	r22, r1
 866:	22 1f       	adc	r18, r18
 868:	74 9f       	mul	r23, r20
 86a:	33 27       	eor	r19, r19
 86c:	a0 0d       	add	r26, r0
 86e:	61 1d       	adc	r22, r1
 870:	23 1f       	adc	r18, r19
 872:	84 9f       	mul	r24, r20
 874:	60 0d       	add	r22, r0
 876:	21 1d       	adc	r18, r1
 878:	82 2f       	mov	r24, r18
 87a:	76 2f       	mov	r23, r22
 87c:	6a 2f       	mov	r22, r26
 87e:	11 24       	eor	r1, r1
 880:	9f 57       	subi	r25, 0x7F	; 127
 882:	50 40       	sbci	r21, 0x00	; 0
 884:	9a f0       	brmi	.+38     	; 0x8ac <__mulsf3_pse+0x88>
 886:	f1 f0       	breq	.+60     	; 0x8c4 <__mulsf3_pse+0xa0>
 888:	88 23       	and	r24, r24
 88a:	4a f0       	brmi	.+18     	; 0x89e <__mulsf3_pse+0x7a>
 88c:	ee 0f       	add	r30, r30
 88e:	ff 1f       	adc	r31, r31
 890:	bb 1f       	adc	r27, r27
 892:	66 1f       	adc	r22, r22
 894:	77 1f       	adc	r23, r23
 896:	88 1f       	adc	r24, r24
 898:	91 50       	subi	r25, 0x01	; 1
 89a:	50 40       	sbci	r21, 0x00	; 0
 89c:	a9 f7       	brne	.-22     	; 0x888 <__mulsf3_pse+0x64>
 89e:	9e 3f       	cpi	r25, 0xFE	; 254
 8a0:	51 05       	cpc	r21, r1
 8a2:	80 f0       	brcs	.+32     	; 0x8c4 <__mulsf3_pse+0xa0>
 8a4:	0c 94 ab 03 	jmp	0x756	; 0x756 <__fp_inf>
 8a8:	0c 94 f6 03 	jmp	0x7ec	; 0x7ec <__fp_szero>
 8ac:	5f 3f       	cpi	r21, 0xFF	; 255
 8ae:	e4 f3       	brlt	.-8      	; 0x8a8 <__mulsf3_pse+0x84>
 8b0:	98 3e       	cpi	r25, 0xE8	; 232
 8b2:	d4 f3       	brlt	.-12     	; 0x8a8 <__mulsf3_pse+0x84>
 8b4:	86 95       	lsr	r24
 8b6:	77 95       	ror	r23
 8b8:	67 95       	ror	r22
 8ba:	b7 95       	ror	r27
 8bc:	f7 95       	ror	r31
 8be:	e7 95       	ror	r30
 8c0:	9f 5f       	subi	r25, 0xFF	; 255
 8c2:	c1 f7       	brne	.-16     	; 0x8b4 <__mulsf3_pse+0x90>
 8c4:	fe 2b       	or	r31, r30
 8c6:	88 0f       	add	r24, r24
 8c8:	91 1d       	adc	r25, r1
 8ca:	96 95       	lsr	r25
 8cc:	87 95       	ror	r24
 8ce:	97 f9       	bld	r25, 7
 8d0:	08 95       	ret

000008d2 <_exit>:
 8d2:	f8 94       	cli

000008d4 <__stop_program>:
 8d4:	ff cf       	rjmp	.-2      	; 0x8d4 <__stop_program>
